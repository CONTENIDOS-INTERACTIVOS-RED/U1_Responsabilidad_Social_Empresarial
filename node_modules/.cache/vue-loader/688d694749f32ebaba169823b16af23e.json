{"remainingRequest":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/src/views/curso/Tema2.vue?vue&type=template&id=11714b5a&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/src/views/curso/Tema2.vue","mtime":1740328221782},{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Responsabilidad_Social_Empresarial/U1_Responsabilidad_Social_Empresarial/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}